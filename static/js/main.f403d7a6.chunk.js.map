{"version":3,"sources":["functions/ShuffleArray.jsx","functions/InitialTeams.jsx","hoc/Aux.jsx","assets/winner.png","Teams/RoundGenerator.jsx","Teams/Teams.jsx","App.js","reportWebVitals.js","index.js"],"names":["_shuffleArray","arr","newArr","slice","i","length","rand","Math","floor","random","_TEAMS16","team","lap","id","score","status","aux","props","children","roundGenerator","games","teams","scores","winners","Array","zip","a1","a2","map","x","zipped","Aux","className","src","Winner","alt","width","height","Teams","shuffleArray","require","startingTeams","TEAMS16","maxLegNumber","log2","legSize","fill","useState","setTeams","laps","setLaps","isScoreButton","setIsScore","chunkHandler","teamList","perChunk","reduce","resultArray","item","index","chunkIndex","push","useEffect","n","forEach","leg","newState","allTeams","Object","values","value","nextWinners","t","setWinners","nextLeg","disabled","onClick","newArray","allScores","ceil","prevState","handleScore","odds","filter","evens","result","j","qualifiedTeams","JSON","parse","stringify","handleWinners","nextLegTeams","RoundGenerator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f403d7a6.chunk.js","sourcesContent":["const shuffleArray = (arr) => {\n  const newArr = arr.slice();\n  for (let i = newArr.length - 1; i > 0; i--) {\n    const rand = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n  }\n  return newArr;\n};\n\nconst _shuffleArray = shuffleArray;\nexport { _shuffleArray as shuffleArray };\n","const TEAMS16 = [\n  {\n    team: \"LA Lakers\",\n    lap: 1,\n    id: \"LA\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Golden State\",\n    lap: 1,\n    id: \"GS\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Miami Heat\",\n    lap: 1,\n    id: \"MH\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"NY Knicks\",\n    lap: 1,\n    id: \"NY\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Bulls\",\n    lap: 1,\n    id: \"CB\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Raptors\",\n    lap: 1,\n    id: \"TR\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Phoenix\",\n    lap: 1,\n    id: \"PS\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Denver\",\n    lap: 1,\n    id: \"DN\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Hornets\",\n    lap: 1,\n    id: \"CH\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Utah Jazz\",\n    lap: 1,\n    id: \"UJ\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Detroit\",\n    lap: 1,\n    id: \"DP\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Indiana\",\n    lap: 1,\n    id: \"IP\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Orlando\",\n    lap: 1,\n    id: \"OM\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Spurs\",\n    lap: 1,\n    id: \"SS\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Philadelphia\",\n    lap: 1,\n    id: \"PH\",\n    score: 0,\n    status: \"\",\n  },\n  {\n    team: \"Milwaukee\",\n    lap: 1,\n    id: \"MW\",\n    score: 0,\n    status: \"\",\n  },\n];\nconst _TEAMS16 = TEAMS16;\nexport { _TEAMS16 as TEAMS16 };\n","const aux = (props) => props.children;\n\nexport default aux;\n","export default __webpack_public_path__ + \"static/media/winner.79928d50.png\";","import React from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport Winner from \"../assets/winner.png\";\nimport \"./Teams.css\";\n\nconst roundGenerator = (props) => {\n  const games = [...props.teams];\n  const scores = [...props.scores];\n  let winners = new Array(16);\n  winners = [...props.winners];\n\n  let zip = (a1, a2) => a1.map((x, i) => [x, \" - \", a2[i]]);\n  let zipped = [];\n  for (let i = 0; i < games.length; i++) {\n    if (games[i].length > 1) {\n      zipped[i] = zip(games[i], scores[i]);\n    } else {\n      zipped[i] = games[i];\n    }\n  }\n\n  const result = zipped.map((team, i) =>\n    team.length > 2 ? (\n      <Aux key={Math.random() * 1000}>\n        <div className=\"playoff-table-group \">\n          <div className=\"playoff-table-pair playoff-table-pair-style\">\n            <div className={`playoff-table-left-player ${winners[i][0]}`}>\n              {team[0]}\n            </div>\n            <div className={`playoff-table-right-player ${winners[i][1]}`}>\n              {team[1]}\n            </div>\n          </div>\n          <div className=\"playoff-table-pair playoff-table-pair-style\">\n            <div className={`playoff-table-left-player ${winners[i][2]}`}>\n              {team[2]}\n            </div>\n            <div className={`playoff-table-right-player ${winners[i][3]}`}>\n              {team[3]}\n            </div>\n          </div>\n        </div>\n      </Aux>\n    ) : team.length === 2 ? (\n      <Aux key={Math.random() * 1000}>\n        <div className=\"playoff-table-group1\">\n          <div className=\"playoff-table-pair playoff-table-pair-style \">\n            <div className={`playoff-table-left-player ${winners[i][0]}`}>\n              {team[0]}\n            </div>\n            <div className={`playoff-table-right-player ${winners[i][1]}`}>\n              {team[1]}\n            </div>\n          </div>\n        </div>\n      </Aux>\n    ) : (\n      <Aux key={Math.random() * 1000}>\n        <div className=\"playoff-table-group1\">\n          <div className=\"playoff-table-pair playoff-table-pair-style playoff-table-final\">\n            <div className=\"playoff-table-left-player\">\n              {<img src={Winner} alt={\"Placeholder\"} width=\"18\" height=\"18\" />}\n            </div>\n            <div className=\"playoff-table-right-player\">{team[0]}</div>\n          </div>\n        </div>\n      </Aux>\n    )\n  );\n\n  return result;\n};\n\nexport default roundGenerator;\n","import React, { useState, useEffect } from \"react\";\nimport Aux from \"../hoc/Aux\";\nimport RoundGenerator from \"./RoundGenerator\";\nimport \"./Teams.css\";\n\nconst Teams = () => {\n  const shuffleArray = require(\"../functions/ShuffleArray\");\n  const Teams = require(\"../functions/InitialTeams\");\n  const startingTeams = shuffleArray.shuffleArray(Teams.TEAMS16);\n  const maxLegNumber = Math.floor(Math.log2(startingTeams.length));\n  const legSize = new Array(maxLegNumber + 1).fill(\"\");\n\n  const [teams, setTeams] = useState([]);\n  const [laps, setLaps] = useState(0);\n  const [isScoreButton, setIsScore] = useState(true);\n\n  // Chunk teams into 4 or 2 (if only there are 2 teams)\n  const chunkHandler = (teamList) => {\n    let perChunk = 4; // items per chunk\n    teamList.length === 2 ? (perChunk = 2) : (perChunk = 4);\n    const teams = teamList.slice();\n    let result = teams.reduce((resultArray, item, index) => {\n      const chunkIndex = Math.floor(index / perChunk);\n      if (!resultArray[chunkIndex]) {\n        resultArray[chunkIndex] = []; // start a new chunk\n      }\n      resultArray[chunkIndex].push(item);\n      return resultArray;\n    }, []);\n    return result;\n  };\n\n  useEffect(() => {\n    let arr = [];\n    // Create empty arrays and initiliaze state\n    let n = startingTeams.length;\n    legSize.forEach((leg) => {\n      leg = new Array(n).fill(\"\");\n      n /= 2;\n      arr.push(leg);\n    });\n    setTeams(arr);\n    setLaps((lap) => lap + 1);\n    let newState = [...arr];\n    newState[0] = startingTeams;\n    setTeams(newState);\n  }, []);\n\n  // Randomly assigns scores to each team\n  const handleScore = (lap) => {\n    let tour = [];\n    let scores = [];\n    if (laps > 0) {\n      tour = teams[laps - 1];\n      tour.forEach((t) => scores.push(t.score));\n    }\n    let newArray = [...teams];\n    let allTeams = [];\n    for (let value of Object.values(newArray)) {\n      allTeams.push(value);\n    }\n    const allScores = [];\n    Object.values(allTeams[laps - 1]).map((t, i) =>\n      t ? (allScores[i] = Math.ceil(Math.random() * 100)) : null\n    );\n    allTeams[laps - 1].forEach((t, i) => (t.score = allScores[i]));\n    setTeams((prevState) => (prevState = allTeams));\n    setIsScore((prevState) => !prevState);\n  };\n\n  // Check the scores and decide the winners\n  const handleWinners = (i) => {\n    let newState = teams.slice();\n    let allScores = newState[i - 1].map((t) => t.score);\n    let odds = allScores.filter((item, index) => index % 2 !== 0);\n    let evens = allScores.filter((item, index) => index % 2 === 0);\n    let result = [];\n    for (let j = 0; j < odds.length; j++) {\n      evens[j] > odds[j]\n        ? result.push(newState[i - 1][j * 2])\n        : result.push(newState[i - 1][j * 2 + 1]);\n    }\n    let winners = [];\n    for (let j = 0; j < odds.length; j++) {\n      evens[j] > odds[j]\n        ? winners.push((newState[i - 1][j * 2].status = \"winner\"))\n        : winners.push((newState[i - 1][j * 2 + 1].status = \"winner\"));\n    }\n\n    // Set qualified teams with new score and status\n    const qualifiedTeams = JSON.parse(JSON.stringify(result));\n    qualifiedTeams.length > 1\n      ? qualifiedTeams.forEach((t) => {\n          t.score = 0;\n          t.status = \"loser\";\n          t.lap = t.lap + 1;\n        })\n      : qualifiedTeams.forEach((t) => {\n          t.score = null;\n          t.status = null;\n        });\n    newState[i] = qualifiedTeams;\n    setTeams(newState);\n    setLaps((laps) => laps + 1);\n    setIsScore((prevState) => !prevState);\n  };\n\n  const setWinners = () => {\n    let tour = [];\n    let winners = [];\n    if (laps > 0) {\n      tour = teams[laps - 1];\n      tour.forEach((t) => winners.push(t.team));\n    }\n    return winners;\n  };\n\n  let allTeams = [];\n  for (let value of Object.values(teams)) {\n    allTeams.push(value);\n  }\n\n  let nextWinners = [];\n  const qualified = [];\n  nextWinners = setWinners();\n  qualified.push(nextWinners);\n\n  const nextLeg = [];\n  const winners = [];\n  const scores = [];\n  for (let i = 0; i < maxLegNumber + 1; i++) {\n    nextLeg.push([]);\n    winners.push([]);\n    scores.push([]);\n  }\n\n  teams.map((team, i) =>\n    team\n      ? Object.values(team).map((t) =>\n          t.team\n            ? (nextLeg[i].push(t.team),\n              winners[i].push(t.status),\n              scores[i].push(t.score))\n            : (nextLeg[i].push(t), winners[i].push(t), scores[i].push(t))\n        )\n      : null\n  );\n\n  return (\n    <Aux>\n      <div className=\"playoff-table\">\n        <button\n          className=\"button is-success is-medium button-margin \"\n          disabled={laps >= maxLegNumber + 1 || !isScoreButton}\n          onClick={() => handleScore(laps)}\n        >\n          PLAY\n        </button>\n        <button\n          className=\"button is-warning is-medium button-margin \"\n          disabled={laps >= maxLegNumber + 1 || isScoreButton}\n          onClick={() => handleWinners(laps)}\n        >\n          QUALIFY\n        </button>\n\n        <div className=\"playoff-table-content board \">\n          {nextLeg.map((nextLegTeams, i) => (\n            <div className=\"playoff-table-tour\" key={Math.random() * 1000}>\n              <RoundGenerator\n                teams={chunkHandler(nextLegTeams)}\n                scores={chunkHandler(scores[i])}\n                laps={laps}\n                winners={chunkHandler(winners[i])}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </Aux>\n  );\n};\n\nexport default Teams;\n","import \"./App.css\";\nimport \"bulma/css/bulma.css\";\nimport Teams from \"./Teams/Teams\";\n//import Teams from \"./Teams/Teams\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Teams />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}